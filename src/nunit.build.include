<?xml version="1.0"?>
<project name="NUnit" default="build" basedir=".">

  <!-- Set up build configuration -->
  <target name="set-build-config">
    <call target="set-${build.config}-build-config"/>
    <property name="build.dir.set" value="false"/>
  </target>

  <target name="set-debug-build-config">
    <property name="build.config" value="debug"/>
    <property name="build.debug" value="true"/>
    <property name="build.defines" value="DEBUG,TRACE,${runtime.defines}"
        dynamic="true"/>
    <property name="zip.build.suffix" value="-dbg"/>
    <property name="msi.build.suffix" value="-dbg"/>
  </target>
	
  <target name="set-release-build-config">
    <property name="build.config" value="release"/>
    <property name="build.debug" value="false"/>
    <property name="build.defines" value="TRACE,${runtime.defines}"
	dynamic="true"/>
    <property name="zip.build.suffix" value=""/>
    <property name="msi.build.suffix" value=""/>
  </target>

  <!-- Set up runtime configuration -->
  <target name="set-runtime-config">   
    <call target="set-${runtime.config}-runtime-config"/>
    <property name="build.dir.set" value="false"/>
  </target>
  
  <target name="set-default-dot-net-runtime-config">
    <fail unless="${property::exists( 'default.net.runtime' )}"
      message="No versions of the .NET SDK were found"/>

    <call target="set-${default.net.runtime}-runtime-config" />
  </target>

  <target name="set-default-mono-runtime-config">
    <fail unless="${property::exists( 'default.mono.runtime' )}"
      message="No versions of the Mono runtime were found"/>

    <call target="set-${default.mono.runtime}-runtime-config" />
  </target>

  <target name="set-net-1.0-runtime-config">
    <fail unless="${framework::sdk-exists( 'net-1.0' )}"
      message="The .NET 1.0 SDK is not configured or not installed"/>

    <property name="runtime.platform" value="net"/>
    <property name="runtime.version" value="1.0"/>
    <property name="runtime.config" value="net-1.0"/>
    <property name="runtime.defines" value="NET,NET_1_0"/>
    <property name="build.mono" value="false"/>
    <property name="build.win32" value="true"/>
    <property name="build.gui" value="false"/>
    <property name="nant.settings.currentframework" 
      value="net-1.0"/>
    <property name="zip.runtime.suffix" value="-net-1.0"/>
    <property name="msi.runtime.suffix" value="-net-1.0"/>
  </target>
	
  <target name="set-net-1.1-runtime-config">
    <property name="runtime.platform" value="net"/>
    <fail unless="${framework::sdk-exists( 'net-1.1' )}"
      message="The .NET 1.1 SDK is not configured or not installed"/>

    <property name="runtime.platform" value="net"/>
    <property name="runtime.version" value="1.1"/>
    <property name="runtime.config" value="net-1.1"/>
    <property name="runtime.defines" value="NET,NET_1_1"/>
    <property name="build.mono" value="false"/>
    <property name="build.win32" value="true"/>
    <property name="build.gui" value="true"/>
    <property name="nant.settings.currentframework" 
      value="net-1.1"/>
    <property name="zip.runtime.suffix" value="-net-1.1"/>
    <property name="msi.runtime.suffix" value="-net-1.1"/>
  </target>
	
  <target name="set-net-2.0-runtime-config">
    <fail unless="${framework::sdk-exists( 'net-2.0' )}"
      message="The .NET 2.0 SDK is not configured or not installed"/>

    <property name="runtime.platform" value="net"/>
    <property name="runtime.version" value="2.0"/>
    <property name="runtime.config" value="net-2.0"/>
    <property name="runtime.defines" value="NET,NET_2_1"/>
    <property name="build.mono" value="false"/>
    <property name="build.win32" value="true"/>
    <property name="build.gui" value="true"/>
    <property name="nant.settings.currentframework" 
      value="net-2.0"/>
    <property name="zip.runtime.suffix" value="-net-2.0"/>
    <property name="msi.runtime.suffix" value="-net-2.0"/>
  </target>
	
  <target name="set-mono-1.0-runtime-config">
    <fail unless="${framework::sdk-exists( 'mono-1.0' )}"
      message="The Mono 1.0 SDK is not configured or not installed"/>

    <property name="runtime.platform" value="mono"/>
    <property name="runtime.version" value="1.0"/>
    <property name="runtime.config" value="mono-1.0"/>
    <property name="runtime.defines" value="MONO,MONO_1_0"/>
    <property name="build.mono" value="true"/>
    <property name="build.win32" value="false"/>
    <property name="build.gui" value="true"/>
    <property name="nant.settings.currentframework" 
      value="mono-1.0"/>
    <property name="zip.runtime.suffix" value="-mono"/>
    <property name="msi.runtime.suffix" value="-mono"/>
  </target>

  <target name="set-mono-2.0-runtime-config">
    <fail unless="${framework::sdk-exists( 'mono-2.0' )}"
      message="The Mono 2.0 SDK is not configured or not installed"/>

    <property name="runtime.platform" value="mono"/>
    <property name="runtime.version" value="2.0"/>
    <property name="runtime.config" value="mono-2.0"/>
    <property name="runtime.defines" value="MONO,MONO_2_0"/>
    <property name="build.mono" value="true"/>
    <property name="build.win32" value="false"/>
    <property name="build.gui" value="true"/>
    <property name="nant.settings.currentframework" 
      value="mono-2.0"/>
    <property name="zip.runtime.suffix" value="-mono-1.0"/>
    <property name="msi.runtime.suffix" value="-mono-2.0"/>
  </target>

  <!-- Set up the build directory -->
  <target name="set-build-dir"
    depends="set-build-config,set-runtime-config">
    <property name="runtime.platform.dir"
      value="${path::combine(project.build.dir,runtime.platform)}"/>
    <property name="runtime.version.dir"
      value="${path::combine(runtime.platform.dir,runtime.version)}"/>
    <property name="current.build.dir" 
      value="${path::combine(runtime.version.dir,build.config)}"/>
    <property name="build.dir.set" value="true"/>
  </target>
  
  <target name="set-build-dir-if-needed">
    <call target="set-build-dir" unless="${build.dir.set}"/>
  </target>

  <target name="make-build-dir" depends="set-build-dir-if-needed">
    <mkdir dir="${current.build.dir}"
      unless="${directory::exists(current.build.dir)}"/>
  </target>

  <!-- Setup the package configuration info -->
  <target name="set-package-config"
    depends="set-build-config,set-runtime-config">
    <property name="zip.file.name" 
      value="${package.name}${zip.runtime.suffix}${zip.build.suffix}.zip"/>
    <property name="msi.file.name"
      value="${package.name}${msi.runtime.suffix}${msi.build.suffix}.msi"/>
    <property name="zipped.src.file.name"
      value="${package.name}-src.zip"/>
    <property name="zipped.resource.file.name"
      value="${package.name}-resources.zip"/>
  </target>

  <target name="copy-bins" depends="build">
    <mkdir dir="${package.bin.dir}"/>
    <copy todir="${package.bin.dir}">
      <fileset basedir="${current.build.dir}">
        <include name="*"/>
        <exclude name="*.wixobj"/>
        <exclude name="nunit-server.*"/>
        <exclude name="nunit-test-server.*"/>
      </fileset>
    </copy>
  </target>
  
  <target name="copy-docs">
    <mkdir dir="${package.doc.dir}"/>
    <copy todir="${package.doc.dir}">
      <fileset basedir="${project.doc.dir}">
        <include name="*.html"/>
	<include name="nunit.css"/>
	<include name="files/*"/>
	<include name="img/*"/>
        <exclude name="img/thumbs.db"/>
      </fileset>
    </copy>
  </target>

  <target name="copy-samples">
    <mkdir dir="${package.samples.dir}"/>

    <copy todir="${package.samples.dir}" includeemptydirs="false">
      <fileset basedir="${project.samples.dir}">
        <include name="ReadMe.txt" />
        <include name="cpp/**/*" />
        <include name="csharp/**/*" />
        <include name="jsharp/**/*" />
        <include name="vb/**/*" />
        <include name="Extensibility/**/*" />
        <exclude name="**/CVS/**" />
        <exclude name="**/bin/**" />
        <exclude name="**/obj/**" />
        <exclude name="**/temp/**" />
        <exclude name="**/Debug/**" />
        <exclude name="**/Release/**" />
        <exclude name="**/*.ncb" />
        <exclude name="**/*.suo" />
        <exclude name="**/*.user" />
        <exclude name="**/~*" />
        <exclude name="**/thumbs.db" />
      </fileset>
    </copy>
  </target>

  <fileset id="source-files" >
        <include name="**/*.sln" />
        <include name="**/*.csproj" />
        <include name="**/*.build" />
        <include name="**/*.build.include" />
        <include name="**/*.snk" />
        <include name="**/*.cs" />
        <include name="**/*.config" />
        <include name="**/*.xsd" />
        <include name="**/*.xslt" />
        <include name="**/*.resx" />
        <include name="**/*.jpg" />
        <include name="**/*.gif" />
        <include name="**/*.ico" />
        <exclude name="**/CVS/**" />
        <exclude name="**/bin/**" />
        <exclude name="**/obj/**" />
        <exclude name="**/Debug/**" />
        <exclude name="**/Release/**" />
        <exclude name="**/*.ncb" />
        <exclude name="**/*.suo" />
        <exclude name="**/*.user" />
        <exclude name="**/~*" />
        <exclude name="**/thumbs.db" />
  </fileset>

  <target name="copy-src">
    <delete dir="${package.src.dir}" />
    <mkdir dir="${package.src.dir}"/>

    <!-- Copy top level src files -->
    <copy todir="${package.src.dir}">
      <fileset basedir=".">
        <include name="license.rtf"/>
        <include name="nunit.build"/>
        <include name="nunit.build.include"/>
        <include name="nunit.sln"/>
        <include name="nunit_VS2005.sln"/>
        <include name="nunit.snk"/>
        <include name="nunit20under21.config"/>
        <include name="nunit20under22.config"/>
        <include name="nunit21under22.config"/>
        <include name="NUnitBinTests.config"/>
        <include name="NUnitBinTests.nunit"/>
        <include name="NUnitDevTests.config"/>
        <include name="NUnitDevTests.nunit"/>
        <include name="CommonAssemblyInfo.cs"/>
        <include name="clr.bat"/>
      </fileset>
    </copy>

    <!-- Copy individual projects -->
    <property name="project.path.list"     value="NUnitFramework/framework,NUnitFramework/tests,NUnitCore,ClientUtilities,ConsoleRunner,NUnitTestServer,NUnitMocks,NUnitExtensions,GuiComponents,GuiRunner,tests" />

    <foreach property="project.path" item="String" delim="," in="${project.path.list}" >
      <copy todir="${package.src.dir}/${project.path}">
        <fileset basedir="${project.path}">
          <include name="**/*.csproj"/>
          <include name="**/*.config"/>
          <include name="**/*.cs"/>
          <include name="**/*.resx"/>
          <include name="**/*.ico"/>
          <include name="**/*.gif"/>
          <include name="**/*.jpg"/>
          <include name="**/*.xsd" />
          <include name="**/*.xslt" />
          <include name="**/*.txt" />
          <include name="**/*.sln" />
          <include name="**/*.csproj" />
          <include name="**/*.vcproj" />
          <include name="**/*.vjsproj" />
          <include name="**/*.vbproj" />
          <exclude name="**/bin/**" />
          <exclude name="**/obj/**" />
        </fileset>
      </copy>
    </foreach>

  </target>

  <!-- Dump configuration settings for debugging -->
  <target name="dump-settings" depends="set-build-dir,set-package-config">
    <echo>Project Directories</echo>
    <echo>  Base:      ${project.base.dir}</echo>
    <echo>   Doc:      ${project.doc.dir}</echo>
    <echo>   Samples:  ${project.samples.dir}</echo>
    <echo>   Source:   ${project.src.dir}</echo>
    <echo>    Install: ${project.install.dir}</echo>
    <echo>   Build:    ${project.build.dir}</echo>
    <echo>   Package:  ${project.package.dir}</echo>
    <echo>   Tools:    ${project.tools.dir}</echo>
    <echo>    WiX:     ${wix.dir}</echo>
    <echo>    nCover:  ${ncover.dir}</echo>
    <echo></echo>
    <echo>Runtime Versions</echo>
    <echo>  Supported: ${supported.frameworks}</echo>
    <echo>  Instaled:  ${installed.frameworks}</echo>
    <echo>  Default:   ${default.runtime}</echo>
    <echo>    .Net:    ${default.net.runtime}</echo>
    <echo>    Mono:    ${default.mono.runtime}</echo>
    <echo></echo>
    <echo>Current Configuration</echo>
    <echo>  Config:    ${build.config}</echo>
    <echo>  Runtime:   ${runtime.config}</echo>
    <echo>  Defines:   ${build.defines}</echo>
    <echo>  Version:   ${package.version}</echo>
    <echo>  Package:   ${package.name}</echo>
    <echo>  Zip file:  ${zip.file.name}</echo>
    <echo>  Msi file:  ${msi.file.name}</echo>
    <echo>  Source:    ${zipped.src.file.name}</echo>
    <echo></echo>
    <echo>Current Working Directories</echo>
    <echo>  Build:     ${current.build.dir}</echo>
    <echo>  Package:   ${package.working.dir}</echo>
    <echo>   Bin:      ${package.bin.dir}</echo>
    <echo>   Doc:      ${package.doc.dir}</echo>
    <echo>   Samples:  ${package.samples.dir}</echo>
    <echo>   Source:   ${package.src.dir}</echo>
    <echo></echo>
    <echo>Current Framework and SDK Directories</echo>
    <echo>  ${framework::get-framework-directory(framework::get-target-framework())}</echo>
    <echo>  ${framework::get-sdk-directory(framework::get-target-framework())}</echo>
  </target>

</project>